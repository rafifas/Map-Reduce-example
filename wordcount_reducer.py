# -*- coding: utf-8 -*-
"""wordcount_reducer.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A-CEEbYcenKa5X5JMRR2H5ryS8VNsvBS
"""

#!/usr/bin/env python

#-------------------------------------------------------------------
#this code will input intermediate result from mapper and give output <word, count>
#-------------------------------------------------------------------
import sys

#set initial variable
last_key      = None
count = 0

# -----------------------------------
# Load file through system standard input
# Loop through file
# --------------------------------

for input_line in sys.stdin:
    # remove leading and trailing space
    input_line = input_line.strip()
    # --------------------------------
    # split the input file to key and value pair, Hadoop default for key and value separator is tab
    # assign them to variable
    this_key, value = input_line.split("\t", 1)  
    # convert value to integer
    value = int(value)        

    # ---------------------------------
    # Check key value
    # if current key value is same as the last key then 
    #    if this current key is same 
    #       add count
    # ---------------------------------
    if last_key == this_key:     #check if key has changed
        count += value   # add value to running total
    else:
        if last_key:             #   if current key is different than previous key
                                 #   and the previous key is not empty
                                 #   (ie last) key is not empty,
                                 #   then output 
            print( "{0}\t{1}".format(last_key, count) )
                                 # hadoop expects tab(ie '\t') 
                                 #    separation
        count = value            #reset values
        last_key = this_key

#print last key
if last_key == this_key:
    print( "{0}\t{1}".format(last_key, count))